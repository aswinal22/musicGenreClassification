{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini_Project\\\\MiniProject-main\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Sidebar from './components/Sidebar';\nimport MainView from './components/MainView';\nimport Player from './components/Player';\nimport Favorites from './components/Favorites';\nimport RecycleBin from './components/RecycleBin';\nimport Popup from './components/Popup'; // Import Popup\nimport axios from 'axios';\n\n// Sample song data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleSongs = [{\n  id: 1,\n  title: 'Song A',\n  artist: 'Artist 1',\n  genre: 'Pop',\n  albumArt: 'https://via.placeholder.com/150'\n}, {\n  id: 2,\n  title: 'Song B',\n  artist: 'Artist 2',\n  genre: 'Rock',\n  albumArt: 'https://via.placeholder.com/150'\n}, {\n  id: 3,\n  title: 'Song C',\n  artist: 'Artist 3',\n  genre: 'Jazz',\n  albumArt: 'https://via.placeholder.com/150'\n}, {\n  id: 4,\n  title: 'Song D',\n  artist: 'Artist 4',\n  genre: 'Hip Hop',\n  albumArt: 'https://via.placeholder.com/150'\n}, {\n  id: 5,\n  title: 'Song E',\n  artist: 'Artist 5',\n  genre: 'Classical',\n  albumArt: 'https://via.placeholder.com/150'\n}, {\n  id: 6,\n  title: 'Song F',\n  artist: 'Artist 6',\n  genre: 'Electronic',\n  albumArt: 'https://via.placeholder.com/150'\n}];\n\n// Predefined genres\nconst predefinedGenres = ['Pop', 'Rock', 'Jazz', 'Hip Hop', 'Classical', 'Electronic'];\nfunction App() {\n  _s();\n  const [songs, setSongs] = useState(sampleSongs); // Use sampleSongs as initial state\n  const [currentGenre, setCurrentGenre] = useState(null);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [recycleBinSongs, setRecycleBinSongs] = useState([]);\n  const [popupMessage, setPopupMessage] = useState(''); // State for popup message\n\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/songs');\n        console.log('Fetched songs:', response.data); // Add this line to debug\n        setSongs(response.data);\n      } catch (error) {\n        console.error('Error fetching songs:', error);\n      }\n    };\n    fetchSongs();\n    fetchRecycleBinSongs(); // Fetch recycle bin songs on initial load\n  }, []);\n  const fetchRecycleBinSongs = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/recycle-bin');\n      setRecycleBinSongs(response.data);\n    } catch (error) {\n      console.error('Error fetching recycle bin songs:', error);\n    }\n  };\n  const handleRestoreSong = async id => {\n    try {\n      await axios.post(`http://localhost:5000/api/recycle-bin/${id}/restore`);\n      fetchRecycleBinSongs();\n      const response = await axios.get('http://localhost:5000/api/songs');\n      setSongs(response.data);\n    } catch (error) {\n      console.error('Error restoring song:', error);\n    }\n  };\n  const handleDeletePermanently = async id => {\n    console.log(`Attempting to permanently delete song with id: ${id}`); // Add this line to debug\n    try {\n      await axios.delete(`http://localhost:5000/api/recycle-bin/${id}`);\n      fetchRecycleBinSongs(); // Fetch recycle bin songs after deleting a song permanently\n      setPopupMessage('Song permanently deleted'); // Set popup message\n    } catch (error) {\n      console.error('Error deleting song permanently:', error);\n    }\n  };\n  const handleSelectGenre = genre => {\n    setCurrentGenre(genre);\n  };\n  const handleSelectSong = song => {\n    setCurrentSong(song);\n    setIsPlaying(true);\n  };\n  const handlePlayPause = () => {\n    setIsPlaying(prev => !prev);\n  };\n  const handleToggleFavorite = id => {\n    setFavorites(prevFavorites => prevFavorites.includes(id) ? prevFavorites.filter(favId => favId !== id) : [...prevFavorites, id]);\n  };\n  const handleDeleteSong = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/api/songs/${id}`);\n      setSongs(prevSongs => prevSongs.filter(song => song._id !== id));\n      fetchRecycleBinSongs(); // Fetch recycle bin songs after deleting a song\n      setPopupMessage('Song moved to recycle bin'); // Set popup message\n    } catch (error) {\n      console.error('Error deleting song:', error);\n    }\n  };\n  const handleUpload = async songData => {\n    const formData = new FormData();\n    formData.append('title', songData.title);\n    formData.append('artist', songData.artist);\n    formData.append('file', songData.file);\n    try {\n      const response = await axios.post('http://localhost:5000/api/songs', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setSongs(prevSongs => [...prevSongs, response.data]);\n    } catch (error) {\n      console.error('Error uploading song:', error);\n    }\n  };\n  const toggleDarkMode = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  const handlePreviousSong = () => {\n    if (!currentSong) return;\n    const currentIndex = songs.findIndex(song => song._id === currentSong._id);\n    if (currentIndex > 0) {\n      setCurrentSong(songs[currentIndex - 1]);\n      setIsPlaying(true);\n    }\n  };\n  const handleNextSong = () => {\n    if (!currentSong) return;\n    const currentGenreSongs = songs.filter(song => song.genre === currentSong.genre);\n    const currentIndex = currentGenreSongs.findIndex(song => song._id === currentSong._id);\n    if (currentIndex < currentGenreSongs.length - 1) {\n      setCurrentSong(currentGenreSongs[currentIndex + 1]);\n      setIsPlaying(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `App ${isDarkMode ? 'dark-mode' : 'light-mode'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spotify-body\",\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n          genres: predefinedGenres,\n          onSelectGenre: handleSelectGenre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(MainView, {\n              songs: songs.filter(song => !currentGenre || song.genre === currentGenre),\n              onUpload: handleUpload,\n              onSelectSong: handleSelectSong,\n              onToggleFavorite: handleToggleFavorite,\n              onDeleteSong: handleDeleteSong,\n              favorites: favorites\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/favorites\",\n            element: /*#__PURE__*/_jsxDEV(Favorites, {\n              songs: songs,\n              favorites: favorites,\n              onSelectSong: handleSelectSong\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/recycle-bin\",\n            element: /*#__PURE__*/_jsxDEV(RecycleBin, {\n              songs: recycleBinSongs,\n              onRestoreSong: handleRestoreSong,\n              onDeletePermanently: handleDeletePermanently\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Player, {\n        currentSong: currentSong,\n        onPlayPause: handlePlayPause,\n        isPlaying: isPlaying,\n        onPrevious: handlePreviousSong,\n        onNext: handleNextSong,\n        onToggleFavorite: handleToggleFavorite\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDarkMode,\n        className: \"toggle-button\",\n        children: isDarkMode ? 'Light Mode' : 'Dark Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), popupMessage && /*#__PURE__*/_jsxDEV(Popup, {\n        message: popupMessage,\n        onClose: () => setPopupMessage('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 26\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UmifHaZYKJbd0Hmef26wiohSl94=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Sidebar","MainView","Player","Favorites","RecycleBin","Popup","axios","jsxDEV","_jsxDEV","sampleSongs","id","title","artist","genre","albumArt","predefinedGenres","App","_s","songs","setSongs","currentGenre","setCurrentGenre","currentSong","setCurrentSong","isPlaying","setIsPlaying","favorites","setFavorites","isDarkMode","setIsDarkMode","recycleBinSongs","setRecycleBinSongs","popupMessage","setPopupMessage","fetchSongs","response","get","console","log","data","error","fetchRecycleBinSongs","handleRestoreSong","post","handleDeletePermanently","delete","handleSelectGenre","handleSelectSong","song","handlePlayPause","prev","handleToggleFavorite","prevFavorites","includes","filter","favId","handleDeleteSong","prevSongs","_id","handleUpload","songData","formData","FormData","append","file","headers","toggleDarkMode","handlePreviousSong","currentIndex","findIndex","handleNextSong","currentGenreSongs","length","children","className","genres","onSelectGenre","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onUpload","onSelectSong","onToggleFavorite","onDeleteSong","onRestoreSong","onDeletePermanently","onPlayPause","onPrevious","onNext","onClick","message","onClose","_c","$RefreshReg$"],"sources":["E:/Mini_Project/MiniProject-main/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport Sidebar from './components/Sidebar';\nimport MainView from './components/MainView';\nimport Player from './components/Player';\nimport Favorites from './components/Favorites';\nimport RecycleBin from './components/RecycleBin';\nimport Popup from './components/Popup'; // Import Popup\nimport axios from 'axios';\n\n// Sample song data\nconst sampleSongs = [\n  { id: 1, title: 'Song A', artist: 'Artist 1', genre: 'Pop', albumArt: 'https://via.placeholder.com/150' },\n  { id: 2, title: 'Song B', artist: 'Artist 2', genre: 'Rock', albumArt: 'https://via.placeholder.com/150' },\n  { id: 3, title: 'Song C', artist: 'Artist 3', genre: 'Jazz', albumArt: 'https://via.placeholder.com/150' },\n  { id: 4, title: 'Song D', artist: 'Artist 4', genre: 'Hip Hop', albumArt: 'https://via.placeholder.com/150' },\n  { id: 5, title: 'Song E', artist: 'Artist 5', genre: 'Classical', albumArt: 'https://via.placeholder.com/150' },\n  { id: 6, title: 'Song F', artist: 'Artist 6', genre: 'Electronic', albumArt: 'https://via.placeholder.com/150' },\n];\n\n// Predefined genres\nconst predefinedGenres = ['Pop', 'Rock', 'Jazz', 'Hip Hop', 'Classical', 'Electronic'];\n\nfunction App() {\n  const [songs, setSongs] = useState(sampleSongs); // Use sampleSongs as initial state\n  const [currentGenre, setCurrentGenre] = useState(null);\n  const [currentSong, setCurrentSong] = useState(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [favorites, setFavorites] = useState([]);\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [recycleBinSongs, setRecycleBinSongs] = useState([]);\n  const [popupMessage, setPopupMessage] = useState(''); // State for popup message\n\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/songs');\n        console.log('Fetched songs:', response.data); // Add this line to debug\n        setSongs(response.data);\n      } catch (error) {\n        console.error('Error fetching songs:', error);\n      }\n    };\n\n    fetchSongs();\n    fetchRecycleBinSongs(); // Fetch recycle bin songs on initial load\n  }, []);\n\n  const fetchRecycleBinSongs = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/recycle-bin');\n      setRecycleBinSongs(response.data);\n    } catch (error) {\n      console.error('Error fetching recycle bin songs:', error);\n    }\n  };\n\n  const handleRestoreSong = async (id) => {\n    try {\n      await axios.post(`http://localhost:5000/api/recycle-bin/${id}/restore`);\n      fetchRecycleBinSongs();\n      const response = await axios.get('http://localhost:5000/api/songs');\n      setSongs(response.data);\n    } catch (error) {\n      console.error('Error restoring song:', error);\n    }\n  };\n\n  const handleDeletePermanently = async (id) => {\n    console.log(`Attempting to permanently delete song with id: ${id}`); // Add this line to debug\n    try {\n      await axios.delete(`http://localhost:5000/api/recycle-bin/${id}`);\n      fetchRecycleBinSongs(); // Fetch recycle bin songs after deleting a song permanently\n      setPopupMessage('Song permanently deleted'); // Set popup message\n    } catch (error) {\n      console.error('Error deleting song permanently:', error);\n    }\n  };\n\n  const handleSelectGenre = (genre) => {\n    setCurrentGenre(genre);\n  };\n\n  const handleSelectSong = (song) => {\n    setCurrentSong(song);\n    setIsPlaying(true);\n  };\n\n  const handlePlayPause = () => {\n    setIsPlaying(prev => !prev);\n  };\n\n  const handleToggleFavorite = (id) => {\n    setFavorites(prevFavorites =>\n      prevFavorites.includes(id) ? prevFavorites.filter(favId => favId !== id) : [...prevFavorites, id]\n    );\n  };\n\n  const handleDeleteSong = async (id) => {\n    try {\n      await axios.delete(`http://localhost:5000/api/songs/${id}`);\n      setSongs(prevSongs => prevSongs.filter(song => song._id !== id));\n      fetchRecycleBinSongs(); // Fetch recycle bin songs after deleting a song\n      setPopupMessage('Song moved to recycle bin'); // Set popup message\n    } catch (error) {\n      console.error('Error deleting song:', error);\n    }\n  };\n\n  const handleUpload = async (songData) => {\n    const formData = new FormData();\n    formData.append('title', songData.title);\n    formData.append('artist', songData.artist);\n    formData.append('file', songData.file);\n\n    try {\n      const response = await axios.post('http://localhost:5000/api/songs', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setSongs(prevSongs => [...prevSongs, response.data]);\n    } catch (error) {\n      console.error('Error uploading song:', error);\n    }\n  };\n\n  const toggleDarkMode = () => {\n    setIsDarkMode(prev => !prev);\n  };\n\n  const handlePreviousSong = () => {\n    if (!currentSong) return;\n    const currentIndex = songs.findIndex(song => song._id === currentSong._id);\n    if (currentIndex > 0) {\n      setCurrentSong(songs[currentIndex - 1]);\n      setIsPlaying(true);\n    }\n  };\n\n  const handleNextSong = () => {\n    if (!currentSong) return;\n    const currentGenreSongs = songs.filter(song => song.genre === currentSong.genre);\n    const currentIndex = currentGenreSongs.findIndex(song => song._id === currentSong._id);\n    if (currentIndex < currentGenreSongs.length - 1) {\n      setCurrentSong(currentGenreSongs[currentIndex + 1]);\n      setIsPlaying(true);\n    }\n  };\n\n  return (\n    <Router>\n      <div className={`App ${isDarkMode ? 'dark-mode' : 'light-mode'}`}>\n        <div className=\"spotify-body\">\n          <Sidebar \n            genres={predefinedGenres} \n            onSelectGenre={handleSelectGenre} \n          />\n          <Routes>\n            <Route path=\"/\" element={\n              <MainView \n                songs={songs.filter(song => !currentGenre || song.genre === currentGenre)} \n                onUpload={handleUpload} \n                onSelectSong={handleSelectSong} \n                onToggleFavorite={handleToggleFavorite}\n                onDeleteSong={handleDeleteSong}\n                favorites={favorites}\n              />\n            } />\n            <Route path=\"/favorites\" element={\n              <Favorites songs={songs} favorites={favorites} onSelectSong={handleSelectSong} />\n            } />\n            <Route path=\"/recycle-bin\" element={\n              <RecycleBin songs={recycleBinSongs} onRestoreSong={handleRestoreSong} onDeletePermanently={handleDeletePermanently} />\n            } />\n          </Routes>\n        </div>\n        <Player \n          currentSong={currentSong} \n          onPlayPause={handlePlayPause} \n          isPlaying={isPlaying} \n          onPrevious={handlePreviousSong} \n          onNext={handleNextSong} \n          onToggleFavorite={handleToggleFavorite}\n        />\n        <button onClick={toggleDarkMode} className=\"toggle-button\">\n          {isDarkMode ? 'Light Mode' : 'Dark Mode'}\n        </button>\n        {popupMessage && <Popup message={popupMessage} onClose={() => setPopupMessage('')} />} {/* Show popup */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}