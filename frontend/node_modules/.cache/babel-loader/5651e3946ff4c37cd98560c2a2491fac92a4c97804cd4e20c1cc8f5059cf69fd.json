{"ast":null,"code":"var _jsxFileName = \"E:\\\\Mini_Project\\\\MiniProject-main\\\\frontend\\\\src\\\\components\\\\Player.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = ({\n  currentSong,\n  onPlayPause,\n  isPlaying,\n  onPrevious,\n  onNext,\n  onToggleFavorite\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  useEffect(() => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.play();\n      } else {\n        audioRef.current.pause();\n      }\n    }\n  }, [isPlaying, currentSong]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: currentSong ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album-art-container\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: currentSong.albumArt,\n          alt: `${currentSong.title} Album Art`,\n          className: `album-art ${isPlaying ? 'flip' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Now Playing: \", currentSong.title, \" by \", currentSong.artist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: `http://localhost:5000/${currentSong.filePath}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button\",\n          onClick: onPrevious,\n          children: \"\\u23EE\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"play-pause-button\",\n          onClick: onPlayPause,\n          children: isPlaying ? 'Pause' : 'Play'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-button\",\n          onClick: onNext,\n          children: \"\\u23ED\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"favorite-button\",\n          onClick: () => onToggleFavorite(currentSong._id),\n          children: \"\\u2764\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No song selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"+byXHHf22FzALubYzgUeSQRtz1Y=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Player","currentSong","onPlayPause","isPlaying","onPrevious","onNext","onToggleFavorite","_s","audioRef","current","play","pause","className","children","src","albumArt","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","artist","ref","filePath","onClick","_id","_c","$RefreshReg$"],"sources":["E:/Mini_Project/MiniProject-main/frontend/src/components/Player.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\n\nconst Player = ({ currentSong, onPlayPause, isPlaying, onPrevious, onNext, onToggleFavorite }) => {\n  const audioRef = useRef(null);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      if (isPlaying) {\n        audioRef.current.play();\n      } else {\n        audioRef.current.pause();\n      }\n    }\n  }, [isPlaying, currentSong]);\n\n  return (\n    <div className=\"player\">\n      {currentSong ? (\n        <div className=\"player-content\">\n          <div className=\"album-art-container\">\n            <img\n              src={currentSong.albumArt}\n              alt={`${currentSong.title} Album Art`}\n              className={`album-art ${isPlaying ? 'flip' : ''}`}\n            />\n          </div>\n          <h3>Now Playing: {currentSong.title} by {currentSong.artist}</h3>\n          <audio ref={audioRef} src={`http://localhost:5000/${currentSong.filePath}`} />\n          <div className=\"player-controls\">\n            <button className=\"control-button\" onClick={onPrevious}>⏮️</button>\n            <button className=\"play-pause-button\" onClick={onPlayPause}>\n              {isPlaying ? 'Pause' : 'Play'}\n            </button>\n            <button className=\"control-button\" onClick={onNext}>⏭️</button>\n            <button className=\"favorite-button\" onClick={() => onToggleFavorite(currentSong._id)}>❤️</button>\n          </div>\n        </div>\n      ) : (\n        <div>No song selected</div>\n      )}\n    </div>\n  );\n};\n\nexport default Player;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}